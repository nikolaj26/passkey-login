(()=>{function u(e){let t=new Uint8Array(e),n="";for(let a of t)n+=String.fromCharCode(a);return btoa(n).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}function g(e){let t=e.replace(/-/g,"+").replace(/_/g,"/"),n=(4-t.length%4)%4,r=t.padEnd(t.length+n,"="),a=atob(r),c=new ArrayBuffer(a.length),d=new Uint8Array(c);for(let o=0;o<a.length;o++)d[o]=a.charCodeAt(o);return c}function p(){return window?.PublicKeyCredential!==void 0&&typeof window.PublicKeyCredential=="function"}function m(e){let{id:t}=e;return{...e,id:g(t),transports:e.transports}}function y(e){return e==="localhost"||/^([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}$/i.test(e)}var i=class extends Error{constructor({message:t,code:n,cause:r,name:a}){super(t,{cause:r}),this.name=a??r.name,this.code=n}};function I({error:e,options:t}){let{publicKey:n}=t;if(!n)throw Error("options was missing required publicKey property");if(e.name==="AbortError"){if(t.signal instanceof AbortSignal)return new i({message:"Registration ceremony was sent an abort signal",code:"ERROR_CEREMONY_ABORTED",cause:e})}else if(e.name==="ConstraintError"){if(n.authenticatorSelection?.requireResidentKey===!0)return new i({message:"Discoverable credentials were required but no available authenticator supported it",code:"ERROR_AUTHENTICATOR_MISSING_DISCOVERABLE_CREDENTIAL_SUPPORT",cause:e});if(t.mediation==="conditional"&&n.authenticatorSelection?.userVerification==="required")return new i({message:"User verification was required during automatic registration but it could not be performed",code:"ERROR_AUTO_REGISTER_USER_VERIFICATION_FAILURE",cause:e});if(n.authenticatorSelection?.userVerification==="required")return new i({message:"User verification was required but no available authenticator supported it",code:"ERROR_AUTHENTICATOR_MISSING_USER_VERIFICATION_SUPPORT",cause:e})}else{if(e.name==="InvalidStateError")return new i({message:"The authenticator was previously registered",code:"ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED",cause:e});if(e.name==="NotAllowedError")return new i({message:e.message,code:"ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY",cause:e});if(e.name==="NotSupportedError")return n.pubKeyCredParams.filter(a=>a.type==="public-key").length===0?new i({message:'No entry in pubKeyCredParams was of type "public-key"',code:"ERROR_MALFORMED_PUBKEYCREDPARAMS",cause:e}):new i({message:"No available authenticator supported any of the specified pubKeyCredParams algorithms",code:"ERROR_AUTHENTICATOR_NO_SUPPORTED_PUBKEYCREDPARAMS_ALG",cause:e});if(e.name==="SecurityError"){let r=window.location.hostname;if(y(r)){if(n.rp.id!==r)return new i({message:`The RP ID "${n.rp.id}" is invalid for this domain`,code:"ERROR_INVALID_RP_ID",cause:e})}else return new i({message:`${window.location.hostname} is an invalid domain`,code:"ERROR_INVALID_DOMAIN",cause:e})}else if(e.name==="TypeError"){if(n.user.id.byteLength<1||n.user.id.byteLength>64)return new i({message:"User ID was not between 1 and 64 characters",code:"ERROR_INVALID_USER_ID_LENGTH",cause:e})}else if(e.name==="UnknownError")return new i({message:"The authenticator was unable to process the specified options, or could not create a new credential",code:"ERROR_AUTHENTICATOR_GENERAL_ERROR",cause:e})}return e}var E=class{createNewAbortSignal(){if(this.controller){let n=new Error("Cancelling existing WebAuthn API call for new one");n.name="AbortError",this.controller.abort(n)}let t=new AbortController;return this.controller=t,t.signal}cancelCeremony(){if(this.controller){let t=new Error("Manually cancelling existing WebAuthn API call");t.name="AbortError",this.controller.abort(t),this.controller=void 0}}},O=new E,C=["cross-platform","platform"];function _(e){if(e&&!(C.indexOf(e)<0))return e}async function S(e){let{optionsJSON:t,useAutoRegister:n=!1}=e;if(!p())throw new Error("WebAuthn is not supported in this browser");let r={...t,challenge:g(t.challenge),user:{...t.user,id:g(t.user.id)},excludeCredentials:t.excludeCredentials?.map(m)},a={};n&&(a.mediation="conditional"),a.publicKey=r,a.signal=O.createNewAbortSignal();let c;try{c=await navigator.credentials.create(a)}catch(l){throw I({error:l,options:a})}if(!c)throw new Error("Registration was not completed");let{id:d,rawId:o,response:s,type:b}=c,h;typeof s.getTransports=="function"&&(h=s.getTransports());let R;if(typeof s.getPublicKeyAlgorithm=="function")try{R=s.getPublicKeyAlgorithm()}catch(l){A("getPublicKeyAlgorithm()",l)}let f;if(typeof s.getPublicKey=="function")try{let l=s.getPublicKey();l!==null&&(f=u(l))}catch(l){A("getPublicKey()",l)}let w;if(typeof s.getAuthenticatorData=="function")try{w=u(s.getAuthenticatorData())}catch(l){A("getAuthenticatorData()",l)}return{id:d,rawId:u(o),response:{attestationObject:u(s.attestationObject),clientDataJSON:u(s.clientDataJSON),transports:h,publicKeyAlgorithm:R,publicKey:f,authenticatorData:w},type:b,clientExtensionResults:c.getClientExtensionResults(),authenticatorAttachment:_(c.authenticatorAttachment)}}function A(e,t){console.warn(`The browser extension that intercepted this WebAuthn API call incorrectly implemented ${e}. You should report this error to them.
`,t)}function T(){if(!p())return new Promise(t=>t(!1));let e=window.PublicKeyCredential;return e.isConditionalMediationAvailable===void 0?new Promise(t=>t(!1)):e.isConditionalMediationAvailable()}function N({error:e,options:t}){let{publicKey:n}=t;if(!n)throw Error("options was missing required publicKey property");if(e.name==="AbortError"){if(t.signal instanceof AbortSignal)return new i({message:"Authentication ceremony was sent an abort signal",code:"ERROR_CEREMONY_ABORTED",cause:e})}else{if(e.name==="NotAllowedError")return new i({message:e.message,code:"ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY",cause:e});if(e.name==="SecurityError"){let r=window.location.hostname;if(y(r)){if(n.rpId!==r)return new i({message:`The RP ID "${n.rpId}" is invalid for this domain`,code:"ERROR_INVALID_RP_ID",cause:e})}else return new i({message:`${window.location.hostname} is an invalid domain`,code:"ERROR_INVALID_DOMAIN",cause:e})}else if(e.name==="UnknownError")return new i({message:"The authenticator was unable to process the specified options, or could not create a new assertion signature",code:"ERROR_AUTHENTICATOR_GENERAL_ERROR",cause:e})}return e}async function P(e){let{optionsJSON:t,useBrowserAutofill:n=!1,verifyBrowserAutofillInput:r=!0}=e;if(!p())throw new Error("WebAuthn is not supported in this browser");let a;t.allowCredentials?.length!==0&&(a=t.allowCredentials?.map(m));let c={...t,challenge:g(t.challenge),allowCredentials:a},d={};if(n){if(!await T())throw Error("Browser does not support WebAuthn autofill");if(document.querySelectorAll("input[autocomplete$='webauthn']").length<1&&r)throw Error('No <input> with "webauthn" as the only or last value in its `autocomplete` attribute was detected');d.mediation="conditional",c.allowCredentials=[]}d.publicKey=c,d.signal=O.createNewAbortSignal();let o;try{o=await navigator.credentials.get(d)}catch(w){throw N({error:w,options:d})}if(!o)throw new Error("Authentication was not completed");let{id:s,rawId:b,response:h,type:R}=o,f;return h.userHandle&&(f=u(h.userHandle)),{id:s,rawId:u(b),response:{authenticatorData:u(h.authenticatorData),clientDataJSON:u(h.clientDataJSON),signature:u(h.signature),userHandle:f},type:R,clientExtensionResults:o.getClientExtensionResults(),authenticatorAttachment:_(o.authenticatorAttachment)}}document.addEventListener("alpine:init",()=>{Alpine.data("registerPasskey",()=>({browserSupportsWebAuthn:p,showPasskeyForm:!1,listeners:[],async init(){this.showPasskeyForm=this.browserSupportsWebAuthn(),this.listeners.push(Livewire.on("options-received",async e=>{let t={optionsJSON:JSON.parse(e.data)};try{let n=await S(t);Livewire.dispatch("addPasskey",[n])}catch(n){Livewire.dispatch("close-modal",{id:"creating-passkey"}),Livewire.dispatch("open-modal",{id:"passkey-error"}),console.error(n)}}))}})),Alpine.data("authenticatePasskey",()=>({browserSupportsWebAuthn:p,showPasskeyField:!1,listeners:[],async init(){this.showPasskeyField=this.browserSupportsWebAuthn(),this.listeners.push(Livewire.on("authenticate-attempt",async e=>{let t={optionsJSON:JSON.parse(e.data)};console.log(t);try{let n=await P(t);Livewire.dispatch("authenticatePasskey",[JSON.stringify(n)])}catch(n){console.log("it failed"),console.error(n)}}))}}))});})();
